Bootstrap: docker

# Use any docker image as a base (see https://hub.docker.com/)
# If using GPU, consider using a CUDA-enabled base image
From: python:3.11-slim

%labels
    Author FOMO25 Challenge - Classification Task
    Version v1.0.0
    Description FOMO25 Infarct Classification Apptainer Image

%environment
    export PYTHONUNBUFFERED=1
    export LC_ALL=C.UTF-8

%files
    # Copy your files (model, predict.py, requirements.txt, ...) to the container
    ./predict.py /app/predict.py
    ./requirements.txt /app/requirements.txt

%post
    # Create necessary directories
    mkdir -p /input /output /app
    
    # Update and install system dependencies
    apt-get update && apt-get install -y --no-install-recommends \
        build-essential \
        && rm -rf /var/lib/apt/lists/*
    
    # Install Python dependencies
    pip install --no-cache-dir -U pip setuptools wheel
    pip install --no-cache-dir -r /app/requirements.txt
    
    # Make predict.py executable
    chmod +x /app/predict.py

%runscript
    # Execute the prediction script with all arguments
    exec python /app/predict.py "$@"

%help
    This container runs the FOMO25 infarct classification task.

    Build this container with:
        
        `apptainer build --fakeroot /path/to/save/classification.sif /path/to/Apptainer.def`

    
    Usage:
        
        `apptainer run --bind /path/to/input:/input:ro \
            --bind /path/to/output:/output \
            --nv \
            classification.sif \
            --flair /input/flair.nii.gz \
            --adc /input/adc.nii.gz \
            --dwi_b1000 /input/dwi.nii.gz \
            --t2s /input/t2s.nii.gz \
            --output /output/prediction.csv`